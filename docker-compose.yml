# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# The content of this file has been modified by David Spalding in 2023
# upon requirement of the software.

version: '3.6'

services:
  backend:
    build:
      dockerfile: Dockerfile
      context: src/backend/consumer/
    container_name: backend
    depends_on:
      kafka-setup:
        condition: service_completed_successfully
    ports:
      - 8001:8001
    networks:
      - devenv

  frontend:
    build:
      dockerfile: Dockerfile
      context: src/frontend/
    container_name: frontend
    depends_on:
      - backend
    ports:
      - 3000:3000
    networks:
      - devenv

  dbclean:
    build:
      dockerfile: Dockerfile
      context: src/backend/dbclean
    container_name: dbclean
    depends_on:
      - postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - devenv

  zookeeper:
    image: bitnami/zookeeper:3.8.0
    ports:
      - 2181:2181
    environment:
      - ZOO_PORT_NUMBER=2181
      - ZOO_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - devenv

  kafka:
    image: bitnami/kafka:3.1.0
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=0
      - ALLOW_PLAINTEXT_LISTENER=yes
      - "KAFKA_HEAP_OPTS=-Xmx500m -Xms500m"
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=EXTERNAL://:9092,CLIENT://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://localhost:9092,CLIENT://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
      - KAFKA_CFG_MESSAGE_MAX_BYTES=3145729
      - KAFKA_CFG_REPLICA_FETCH_MAX_BYTES=3145729
    depends_on:
      - zookeeper
    networks:
      - devenv

  kafka-setup:
    image: bitnami/kafka:2.8.1
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    volumes:
      - ./topics:/topics.txt
      - ./create-topics.sh:/scripts/create-topics.sh
    command: bash /scripts/create-topics.sh
    environment:
      KAFKA_CFG_BROKER_ID: ignored
      KAFKA_CFG_ZOOKEEPER_CONNECT: ignored
    networks:
      - devenv

  get-kafka-exporter:
    image: busybox:1.35.0
    volumes:
      - exporters:/exporters
    command: wget --no-check-certificate https://repo1.maven.org/maven2/io/zeebe/zeebe-kafka-exporter/3.1.1/zeebe-kafka-exporter-3.1.1-jar-with-dependencies.jar -O /exporters/zeebe-kafka-exporter.jar

  zeebe:
    image: camunda/zeebe:8.2.1
    restart: always
    environment:
      - ZEEBE_LOG_LEVEL=debug
    ports:
      - "26500:26500"
      - "9600:9600"
    volumes:
      - ./config/zeebe/application.yaml:/usr/local/zeebe/config/application.yaml
      - exporters:/usr/local/zeebe/exporters
    depends_on:
      - kafka
      - get-kafka-exporter
    networks:
      - devenv

  postgres:
    image: bitnami/postgresql:15.4.0
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - devenv

volumes:
  exporters:
  postgres:

networks:
  devenv:
    driver: bridge
    name: devenv
